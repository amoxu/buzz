<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amoxu.mapper.MusicShareMapper" >
  <resultMap id="BaseResultMap" type="com.amoxu.entity.MusicShare" >
    <id column="oid" property="oid" jdbcType="INTEGER" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="userLike" property="userLike"/>

    <association property="sendUser" resultMap="userCommonInfoMap"></association>
    <association property="music" column="mid" select="com.amoxu.mapper.MusicMapper.selectByPrimaryKey" ></association>

  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    music_share.oid, music_share.mid, music_share.uid, music_share.content, music_share.likes, music_share.ctime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.amoxu.entity.MusicShareExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from music_share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT
    <include refid="Base_Column_List" />
    ,`user`.uid
    ,`user`.nickname
    ,`user`.icons
    FROM music_share
    LEFT JOIN `user` on `user`.uid = `music_share`.uid
    where oid = #{oid,jdbcType=INTEGER}

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from music_share
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.amoxu.entity.MusicShareExample" >
    delete from music_share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.amoxu.entity.MusicShare"  keyProperty="oid" useGeneratedKeys="true">
    insert into music_share (oid, mid, uid, 
      content, likes, ctime
      )
    values (#{oid,jdbcType=INTEGER}, #{mid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.amoxu.entity.MusicShare"  keyProperty="oid" useGeneratedKeys="true" >
    insert into music_share
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        oid,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="likes != null" >
        likes,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.amoxu.entity.MusicShareExample" resultType="java.lang.Integer" >
    select count(*) from music_share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update music_share
    <set >
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.mid != null" >
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.likes != null" >
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update music_share
    set oid = #{record.oid,jdbcType=INTEGER},
      mid = #{record.mid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.amoxu.entity.MusicShare" >
    update music_share
    <set >
      <if test="mid != null" >
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amoxu.entity.MusicShare" >
    update music_share
    set mid = #{mid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where oid = #{oid,jdbcType=INTEGER}
  </update>


  <resultMap id="userCommonInfoMap" type="com.amoxu.entity.User">
    <result property="nickname" column="nickname"/>
    <result property="icons" column="icons"/>
    <result property="uid" column="uid"/>
  </resultMap>

  <resultMap id="listMap" type="com.amoxu.entity.MusicShare" >
    <id column="oid" property="oid" jdbcType="INTEGER" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />

    <result column="userLike" property="userLike"/>

    <association property="sendUser" resultMap="userCommonInfoMap"></association>
    <association property="music" column="mid" select="com.amoxu.mapper.MusicMapper.selectByPrimaryKey" ></association>
    <collection property="comment" column="{onlineId=onlineId,baseId=oid}"
                select="com.amoxu.mapper.MusicShareCommentMapper.selectMainChild" fetchType="eager" />
  </resultMap>

  <select id="selectMain" resultMap="listMap" parameterType="map">
    /* 查询首页 按时间排序*/
    SELECT

    music_share.oid ,
    music_share.mid,
    music_share.uid,
    music_share.content,
    music_share.likes,
    music_share.ctime,

    `user`.uid,
    `user`.nickname,
    `user`.icons

    , like_music_share.uid as userLike
      ,
      <if test="onlineId != null ">
          #{onlineId}
      </if>
      <if test="onlineId == null ">
          NULL
      </if>
      AS onlineId
    FROM music_share

    LEFT JOIN like_music_share ON music_share.oid = like_music_share.oid AND like_music_share.uid=

    <if test="onlineId != null">
      #{onlineId}
    </if>
    <if test="onlineId == null">
      0
    </if>
    LEFT JOIN `user` on `user`.uid = `music_share`.uid

    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>


    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.limit!=0">
      limit ${example.offset}, ${example.limit}
    </if>
  </select>


</mapper>