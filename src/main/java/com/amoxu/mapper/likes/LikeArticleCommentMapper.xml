<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amoxu.mapper.likes.LikeArticleCommentMapper" >
  <resultMap id="BaseResultMap" type="com.amoxu.entity.likes.LikeArticleComment" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <id column="acid" property="acid" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, acid, ctime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.amoxu.entity.likes.LikeArticleCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from like_article_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.amoxu.entity.likes.LikeArticleCommentKey" >
    select 
    <include refid="Base_Column_List" />
    from like_article_comment
    where uid = #{uid,jdbcType=INTEGER}
      and acid = #{acid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.amoxu.entity.likes.LikeArticleCommentKey" >
    delete from like_article_comment
    where uid = #{uid,jdbcType=INTEGER}
      and acid = #{acid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.amoxu.entity.likes.LikeArticleCommentExample" >
    delete from like_article_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.amoxu.entity.likes.LikeArticleComment" >
    insert into like_article_comment (uid, acid, ctime
      )
    values (#{uid,jdbcType=INTEGER}, #{acid,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.amoxu.entity.likes.LikeArticleComment" >
    insert into like_article_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="acid != null" >
        acid,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="acid != null" >
        #{acid,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.amoxu.entity.likes.LikeArticleCommentExample" resultType="java.lang.Integer" >
    select count(*) from like_article_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update like_article_comment
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.acid != null" >
        acid = #{record.acid,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update like_article_comment
    set uid = #{record.uid,jdbcType=INTEGER},
      acid = #{record.acid,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.amoxu.entity.likes.LikeArticleComment" >
    update like_article_comment
    <set >
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
      and acid = #{acid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amoxu.entity.likes.LikeArticleComment" >
    update like_article_comment
    set ctime = #{ctime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
      and acid = #{acid,jdbcType=INTEGER}
  </update>
  <select id="callLikeProc" statementType="CALLABLE" resultType="com.amoxu.entity.ProcCallResult"
          parameterType="com.amoxu.entity.ProcCallResult">
    CALL opt_like_article_comment(
    #{cid,mode=IN},
    #{uid,mode=INOUT,jdbcType=INTEGER}
    )
  </select>
</mapper>