<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amoxu.mapper.FriendsMapper">
    <resultMap id="BaseResultMap" type="com.amoxu.entity.Friends">
        <id column="suid" property="suid" jdbcType="INTEGER"/>
        <id column="duid" property="duid" jdbcType="INTEGER"/>
        <result column="ctime" property="ctime" jdbcType="TIMESTAMP"/>
        <association property="user" resultMap="friendsMap"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    suid, duid, ctime
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.amoxu.entity.FriendsExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from friends
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.amoxu.entity.FriendsKey">
        select
        <include refid="Base_Column_List"/>
        from friends
        where suid = #{suid,jdbcType=INTEGER}
        and duid = #{duid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.amoxu.entity.FriendsKey">
    delete from friends
    where suid = #{suid,jdbcType=INTEGER}
      and duid = #{duid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.amoxu.entity.FriendsExample">
        delete from friends
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.amoxu.entity.Friends">
    insert into friends (suid, duid, ctime
      )
    values (#{suid,jdbcType=INTEGER}, #{duid,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.amoxu.entity.Friends">
        insert into friends
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="suid != null">
                suid,
            </if>
            <if test="duid != null">
                duid,
            </if>
            <if test="ctime != null">
                ctime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="suid != null">
                #{suid,jdbcType=INTEGER},
            </if>
            <if test="duid != null">
                #{duid,jdbcType=INTEGER},
            </if>
            <if test="ctime != null">
                #{ctime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.amoxu.entity.FriendsExample" resultType="java.lang.Integer">
        select count(*) from friends
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update friends
        <set>
            <if test="record.suid != null">
                suid = #{record.suid,jdbcType=INTEGER},
            </if>
            <if test="record.duid != null">
                duid = #{record.duid,jdbcType=INTEGER},
            </if>
            <if test="record.ctime != null">
                ctime = #{record.ctime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update friends
        set suid = #{record.suid,jdbcType=INTEGER},
        duid = #{record.duid,jdbcType=INTEGER},
        ctime = #{record.ctime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.amoxu.entity.Friends">
        update friends
        <set>
            <if test="ctime != null">
                ctime = #{ctime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where suid = #{suid,jdbcType=INTEGER}
        and duid = #{duid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.amoxu.entity.Friends">
    update friends
    set ctime = #{ctime,jdbcType=TIMESTAMP}
    where suid = #{suid,jdbcType=INTEGER}
      and duid = #{duid,jdbcType=INTEGER}
  </update>
    <!--获取朋友信息，id ,用户名，用户介绍-->
    <resultMap id="friendsMap" type="com.amoxu.entity.User">
        <id property="uid" column="uid"/>
        <result property="icons" column="icons"/>
        <result property="nickname" column="nickname"/>
        <result property="introduce" column="introduce"/>
    </resultMap>
    <!--/*WHERE friends.suid = #{suid,jdbcType=INTEGER}*/-->
    <select id="selectSelective" resultMap="friendsMap" parameterType="com.amoxu.entity.FriendsExample">
        SELECT
        <if test="distinct">
            distinct
        </if>
        user.uid,user.icons,nickname,introduce

        FROM buzz.friends
        LEFT JOIN buzz.user ON user.uid = friends.duid


        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>

</mapper>