<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amoxu.mapper.MusicShareContentMapper" >
  <resultMap id="BaseResultMap" type="com.amoxu.entity.MusicShareContent" >
    <id column="cid" property="cid" jdbcType="INTEGER" />
    <result column="rcid" property="rcid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="msid" property="msid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="feeling" property="feeling" jdbcType="DOUBLE" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cid, rcid, uid, msid, content, likes, feeling, ctime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.amoxu.entity.MusicShareContentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from music_share_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from music_share_content
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from music_share_content
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.amoxu.entity.MusicShareContentExample" >
    delete from music_share_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.amoxu.entity.MusicShareContent" >
    insert into music_share_content (cid, rcid, uid, 
      msid, content, likes, 
      feeling, ctime)
    values (#{cid,jdbcType=INTEGER}, #{rcid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{msid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER}, 
      #{feeling,jdbcType=DOUBLE}, #{ctime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.amoxu.entity.MusicShareContent" >
    insert into music_share_content
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        cid,
      </if>
      <if test="rcid != null" >
        rcid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="msid != null" >
        msid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="likes != null" >
        likes,
      </if>
      <if test="feeling != null" >
        feeling,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="rcid != null" >
        #{rcid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="msid != null" >
        #{msid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="feeling != null" >
        #{feeling,jdbcType=DOUBLE},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.amoxu.entity.MusicShareContentExample" resultType="java.lang.Integer" >
    select count(*) from music_share_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update music_share_content
    <set >
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.rcid != null" >
        rcid = #{record.rcid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.msid != null" >
        msid = #{record.msid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.likes != null" >
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.feeling != null" >
        feeling = #{record.feeling,jdbcType=DOUBLE},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update music_share_content
    set cid = #{record.cid,jdbcType=INTEGER},
      rcid = #{record.rcid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      msid = #{record.msid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      feeling = #{record.feeling,jdbcType=DOUBLE},
      ctime = #{record.ctime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.amoxu.entity.MusicShareContent" >
    update music_share_content
    <set >
      <if test="rcid != null" >
        rcid = #{rcid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="msid != null" >
        msid = #{msid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="feeling != null" >
        feeling = #{feeling,jdbcType=DOUBLE},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amoxu.entity.MusicShareContent" >
    update music_share_content
    set rcid = #{rcid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      msid = #{msid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      feeling = #{feeling,jdbcType=DOUBLE},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>